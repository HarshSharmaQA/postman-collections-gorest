{
	"info": {
		"_postman_id": "1125fa41-6146-4472-bb57-ab955f16c716",
		"name": "gorest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12746388",
		"_collection_link": "https://blue-meadow-309036.postman.co/workspace/My-workplace-testing~ff22490f-77b6-4902-aeb5-a63214b20f03/collection/12746388-1125fa41-6146-4472-bb57-ab955f16c716?action=share&source=collection_link&creator=12746388"
	},
	"item": [
		{
			"name": "users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_value = pm.response.json();\r",
							"\r",
							"// Validate the response structure and data types\r",
							"pm.test(\"Validating datatype of the body\", function () {\r",
							"    pm.expect(json_value).to.be.an(\"object\"); // Ensure the response is an object\r",
							"    pm.expect(json_value.id).to.be.a(\"number\"); // Check id is a number\r",
							"    pm.expect(json_value).to.have.property(\"name\").that.is.a(\"string\"); // Check name is a string\r",
							"    pm.expect(json_value).to.have.property(\"gender\").that.is.a(\"string\"); // Check gender is a string\r",
							"});\r",
							"\r",
							"// Dynamic Validation of Response Body Values\r",
							"pm.test(\"Validating response body values dynamically\", function () {\r",
							"    // Expected values (can be stored in variables for reuse or configured)\r",
							"    const expectedName = \"Tenali Ramakrishna\";\r",
							"    const validGenders = [\"male\", \"female\", \"other\"];\r",
							"\r",
							"    // Validate specific key values\r",
							"    pm.expect(json_value.name).to.equal(expectedName, `Expected name to be ${expectedName}`);\r",
							"    pm.expect(validGenders).to.include(json_value.gender, `Gender should be one of ${validGenders}`);\r",
							"});\r",
							"\r",
							"// Example of additional unique validations\r",
							"pm.test(\"Validating additional unique conditions\", function () {\r",
							"    // Ensure the id is positive and greater than 0\r",
							"    pm.expect(json_value.id).to.be.above(0, \"ID should be a positive number\");\r",
							"\r",
							"    // Optionally validate the length of the name\r",
							"    pm.expect(json_value.name.length).to.be.above(5, \"Name length should be greater than 5 characters\");\r",
							"\r",
							"    // Validate the email format if present in the response\r",
							"    if (json_value.email) {\r",
							"        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r",
							"        pm.expect(json_value.email).to.match(emailRegex, \"Email should be in a valid format\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const random=Math.random().toString(36).substring(4);\r",
							"var username=\"Harsh\"+random+\"@gmail.com\";\r",
							"pm.globals.set(\"email\",username);\r",
							"// Parse the response JSON\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Get the latest ID (assuming the array is sorted or by the last item)\r",
							"const latestId = response[response.length - 1].id;\r",
							"\r",
							"// Save the ID to a variable\r",
							"pm.globals.set(\"latestId\", latestId);\r",
							"\r",
							"// Log the ID for debugging\r",
							"console.log(\"Latest ID:\", latestId);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "f6fab892f776b6696de9b4c5263b74726cf8224f4724f7a21a0a2edad499e7c6",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer ACCESS-TOKEN"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n    {\r\n        \"name\": \"Tenali Ramakrishna\",\r\n        \"gender\": \"male\",\r\n        \"email\": \"{{email}}\",\r\n        \"status\": \"active\"\r\n    }\r\n    ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				},
				"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https://gorest.co.in/public/v2/users\" -d '{\"name\":\"Tenali Ramakrishna\", \"gender\":\"male\", \"email\":\"tenali.ramakrishna@15ce.com\", \"status\":\"active\"}'"
			},
			"response": []
		},
		{
			"name": "users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer ACCESS-TOKEN"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						""
					]
				},
				"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XGET \"https://gorest.co.in/public/v2/users\""
			},
			"response": []
		},
		{
			"name": "PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Validating response body structure\", function () {\r",
							"    const json_value = pm.response.json();\r",
							"    pm.expect(json_value).to.be.an(\"object\");\r",
							"    pm.expect(json_value).to.have.property(\"id\").that.is.a(\"number\");\r",
							"    pm.expect(json_value).to.have.property(\"name\").that.is.a(\"string\");\r",
							"    pm.expect(json_value).to.have.property(\"gender\").that.is.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Email validation\", function () {\r",
							"    if (pm.response.json().email) {\r",
							"        const emailRegex = /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/;\r",
							"        pm.expect(pm.response.json().email).to.match(emailRegex);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"const latestId = response[response.length - 1].id;\r",
							"pm.environment.set(\"latestId\", latestId);\r",
							"console.log(`Latest ID: ${latestId}`);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer ACCESS-TOKEN"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Allasani Peddana\", \"email\":\"allasani.peddana@15ce.com\", \"status\":\"active\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						""
					],
					"query": [
						{
							"key": null,
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPATCH \"https://gorest.co.in/public/v2/users/7001813\" -d '{\"name\":\"Allasani Peddana\", \"email\":\"allasani.peddana@15ce.com\", \"status\":\"active\"}'"
			},
			"response": []
		},
		{
			"name": "DELETE",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Get the latest ID (assuming the array is sorted or by the last item)\r",
							"const latestId = response[response.length - 1].id;\r",
							"\r",
							"// Save the ID to a variable\r",
							"pm.globals.set(\"latestId\", latestId);\r",
							"\r",
							"// Log the ID for debugging\r",
							"console.log(\"Latest ID:\", latestId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer ACCESS-TOKEN"
					}
				],
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{latestId}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{latestId}}"
					]
				},
				"description": "Generated from cURL: curl -i -H \"Accept:application/json\" -H \"Content-Type:application/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XDELETE \"https://gorest.co.in/public/v2/users/7001813\""
			},
			"response": []
		},
		{
			"name": "Data Driven ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.get(\"variable_key\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/{{endpoint}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"{{endpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "f6fab892f776b6696de9b4c5263b74726cf8224f4724f7a21a0a2edad499e7c6",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}